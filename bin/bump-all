#!/usr/bin/env ruby

bump_version = ARGV[0]

if !bump_version || !['patch', 'minor', 'major'].include?(bump_version)
  puts "Invalid or no version bump specified. Should be one of: patch, minor, major"
  if bump_version
    puts "Version bump supplied: #{bump_version}"
  end
  return
end

packages=%w(
  bullet_train
  bullet_train-api
  bullet_train-fields
  bullet_train-has_uuid
  bullet_train-incoming_webhooks
  bullet_train-integrations
  bullet_train-integrations-stripe
  bullet_train-obfuscates_id
  bullet_train-outgoing_webhooks
  bullet_train-roles
  bullet_train-scope_questions
  bullet_train-scope_validator
  bullet_train-sortable
  bullet_train-super_load_and_authorize_resource
  bullet_train-super_scaffolding
  bullet_train-themes
  bullet_train-themes-light
  bullet_train-themes-tailwind_css
)

# This is a little hacky. I'm just declaring the variable outside
# of a loop so that we have access to it after the loop is done.
# This assumes that all gems in this repo are being bumped at the
# same time and are being kept in sync. That's a safe assumption
# based on how we _want_ things to work, but it might not always
# work exactly how we want. So...
version = ""

packages.each do |package|
  puts "bumping package: #{package}"
  Dir.chdir "./#{package}"

  puts output = `bump patch`
  version = output.chomp.lines.last.chomp
  puts "Bumped to #{version}."

  Dir.chdir ".."
end

puts "the last version = #{version}"

npm_packages=%w(
  bullet_train
  bullet_train-fields
  bullet_train-sortable
)

npm_packages.each do |package|
  puts "bumping npm package: #{package}"
  Dir.chdir "./#{package}"

  text = File.read("package.json")
  new_contents = text.gsub(/"version": ".*"/, "\"version\": \"#{version}\"")
  File.open("package.json", "w") { |file| file.puts new_contents }

  Dir.chdir ".."
end

# This block allows us to pass the new bump version out to the workflow.
github_output_file = ENV['GITHUB_OUTPUT']
if github_output_file
  IO.write(github_output_file, "NEW_VERSION_NUMBER=#{version}\n", mode: 'a')
end
