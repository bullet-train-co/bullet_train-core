# syntax=docker/dockerfile:1
# check=error=true

# This Dockerfile is designed for production, not development. Use with Kamal or build'n'run by hand:
# docker build -t bullet_train/base -f Dockerfile.base .
# TODO: Fix this command. Or is it even useful to run this directly? Maybe for investigative purposes?
# docker run -d -p 80:80 -e RAILS_MASTER_KEY=<value from config/master.key> --name untitled_application untitled_application

# For a containerized dev environment, see Dev Containers: https://guides.rubyonrails.org/getting_started_with_devcontainer.html

# RUBY_VERSION must be passed in as an ENV var. The GitHub Actions workflow that uses this file
# will take care of it for building the official images.
#######################################################################################################
ARG RUBY_VERSION=fake.version
FROM docker.io/library/ruby:$RUBY_VERSION-slim AS base

# Rails app lives here
WORKDIR /rails

# Install base packages
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y curl libjemalloc2 libvips postgresql-client && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

ARG JEMALLOC_PATH
RUN JEMALLOC_PATH=$(ls /usr/lib/*/libjemalloc.so.2) && export JEMALLOC_PATH

# Set production environment
ENV RAILS_ENV="production" \
    BUNDLE_DEPLOYMENT="1" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="development" \
    LD_PRELOAD=$JEMALLOC_PATH

# Add a user and group that will be used to run the app
RUN groupadd --system --gid 1000 rails && \
    useradd rails --uid 1000 --gid 1000 --create-home --shell /bin/bash



